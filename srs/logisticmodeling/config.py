# >>>>>>>>>>>> Параметры отображения <<<<<<<<<<<<
PRINT_ALL = False
VOXEL_RANGE = 100  # миллиметров
OPACITY = 0.3
dR = 20

# >>>>>>>>>>>> Параметры перевозимого груза <<<<<<<<<<<<
class Truck:
    def __init__(self, name: str, weight: int, dims: [int, int, int]):
        """Мини-класс для грузовых машин
        :param name: Название грузовой машины
        :param weight: Грузоподъёмность грузовой машины (в кг)
        :param dims: Габариты кузова: [длина, ширина, высота] (в миллиметрах)"""
        self.name = name
        self.weight = weight
        self.dims = dims.copy()

class Cargo:
    def __init__(self, name: str, net_weight: float, gross_weight: float, dims: [int, int, int], color: str,
                 value: int = 1):
        """Мини-класс для перевозимого груза
        :param name: Название груза
        :param net_weight: Масса нетто (в кг)
        :param gross_weight: Масса брутто (в кг)
        :param dims: Габариты кузова: [длина, ширина, высота] (в миллиметрах)
        :param color: Цвет для отображения
        :param value: Стоимость груза (тыс. руб)"""
        self.name = name
        self.net_weight = net_weight
        self.gross_weight = gross_weight
        self.dims = dims.copy()
        self.color = color
        self.value = value

TRUCKS = {"Газель Next": Truck("Газель Next", 1500, [3360, 1809, 1881]),
          "Ford Transit": Truck("Ford Transit", 1200, [3494, 1748, 1886]),
          "ГАЗ Валдай": Truck("ГАЗ Валдай", 3500, [6100, 2176, 2200]),
          "МАЗ–4370 «Зубрёнок»": Truck("МАЗ–4370 «Зубрёнок»", 5000, [6220, 2480, 2310]),
          "MAN TGM 18.250": Truck("MAN TGM 18.250", 10000, [7490, 2490, 2923]),
          "DAF XF95 series": Truck("DAF XF95 series", 20000, [13600, 2450, 2600])}

CARGOS = {"Кофемашина": Cargo("Кофемашина", 8., 9., dims=[600, 500, 600], color="brown"),
          "Мультиварка": Cargo("Мультиварка", 4., 4.8, dims=[550, 550, 550], color="green"),
          "Микроволновая печь": Cargo("Микроволновая печь", 18., 19., dims=[800, 700, 600], color="gray"),

          "Тормозные колодки и диски": Cargo("Тормозные колодки и диски", 8., 10., dims=[600, 400, 200], color="red"),
          "Сальники и манжеты": Cargo("Сальники и манжеты", 5., 6., dims=[400, 300, 200], color="blue"),
          "Свечи зажигания": Cargo("Свечи зажигания", 2., 3., dims=[300, 200, 100], color="yellow"),
          "Электрочайники": Cargo("Электрочайники", 2., 2.5, dims=[300, 250, 250], color="blue"),

          "Малый набор инструментов": Cargo("Малый набор инструментов", 5., 6., dims=[500, 300, 200], color="orange"),
          "Средний набор инструментов": Cargo("Средний набор инструментов", 10., 12.,
                                              dims=[600, 400, 300], color="darkcyan"),
          "Большой набор инструментов": Cargo("Большой набор инструментов", 20., 22.,
                                              dims=[800, 500, 400], color="deeppink"),
          "Профессиональный набор инструментов": Cargo("Профессиональный набор инструментов", 30., 33.,
                                                       dims=[1000, 600, 500], color="indigo"),

          "Крепежные детали": Cargo("Крепежные детали", 100., 110., dims=[1200, 800, 600], color="darkcyan"),
          "Запчасти для насосов 1": Cargo("Запчасти для насосов 1", 5., 6., dims=[400, 300, 200], color="moccasin"),
          "Запчасти для насосов 2": Cargo("Запчасти для насосов 2", 10., 12., dims=[600, 400, 300], color="blue"),
          "Стоматологические фрезы": Cargo("Стоматологические фрезы", 5., 6., dims=[400, 300, 200], color="gold"),
          "Комплектующие пылесосов 1": Cargo("Комплектующие пылесосов 1", 5., 6., dims=[400, 300, 200], color="violet"),
          "Комплектующие пылесосов 2": Cargo("Комплектующие пылесосов 2", 10., 12., dims=[600, 400, 300], color="red"),
          }
